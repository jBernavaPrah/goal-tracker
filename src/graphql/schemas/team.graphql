type Team implements Model {
    id: ID!

    name: String!
    players: [Player!]! @hasMany(type: PAGINATOR)

    gameTeam1: [Game!]! @hasMany(type: PAGINATOR)
    gameTeam2: [Game!]! @hasMany(type: PAGINATOR)

    createdAt: DateTime! @rename(attribute: "created_at")
    updatedAt: DateTime! @rename(attribute: "updated_at")
    deletedAt: DateTime @rename(attribute: "deleted_at")

}

extend type Query   {
    teams(name: String @where(operator: "like") withPlayers: Boolean @scope(name: "withPlayers")): [Team!]!
    @paginate(type: PAGINATOR)

    team(id: ID! @eq): Team
    @find
}

extend type Mutation  {
    createTeam(input: CreateTeamInput! @spread): Team!
    @create

    updateTeam(input: UpdateTeamInput! @spread): Team!
    @update

    deleteTeam(id: ID!): Team!
    @delete

}

input CreateTeamInput {
    name: String! @rules(apply: ["min:3"])

}

input UpdateTeamInput {
    id: ID!
    name: String @rules(apply: ["min:3"])
}


